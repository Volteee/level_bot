"""Init

Revision ID: 2e48025317c9
Revises: 
Create Date: 2025-10-13 23:47:49.264628

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2e48025317c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tg_username', sa.String(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('relation_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_username')
    )
    op.create_table('users_roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('INITIATOR', 'INSPECTOR', 'ADMIN', 'UNKNOWN', 'PAYEER', name='userroleenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('orders',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('CREATED', 'PENDING', 'SUCCESS', 'CANCELED', 'PAID', name='orderstateenum'), nullable=False),
    sa.Column('initiator_id', sa.Uuid(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('reply', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.Enum('RUB', 'USD', name='ordercurrencyenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['initiator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('initiator_id', sa.Uuid(), nullable=False),
    sa.Column('first_inspector_id', sa.Uuid(), nullable=True),
    sa.Column('second_inspector_id', sa.Uuid(), nullable=True),
    sa.Column('third_inspector_id', sa.Uuid(), nullable=True),
    sa.Column('forth_inspector_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['first_inspector_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['forth_inspector_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['initiator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['second_inspector_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['third_inspector_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('media_type', sa.Enum('DOCUMENT', 'PHOTO', 'VIDEO', name='filemediatypeenum'), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path')
    )
    op.create_table('messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('message_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type', sa.Enum('INITIATOR_MESSAGE', 'INSPECTOR_MESSAGE', 'PAYEER_MESSAGE', name='messagetypeenum'), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('files')
    op.drop_table('relations')
    op.drop_table('orders')
    op.drop_table('users_roles')
    op.drop_table('users')
    op.drop_table('configs')
    # ### end Alembic commands ###
    op.execute('DROP TYPE userroleenum;')
    op.execute('DROP TYPE orderstateenum;')
    op.execute('DROP TYPE ordercurrencyenum;')
    op.execute('DROP TYPE filemediatypeenum;')
    op.execute('DROP TYPE messagetypeenum;')

